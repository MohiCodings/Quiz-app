{"version":3,"sources":["redux/constant/quizConstant.js","components/Modal.jsx","assets/images/trophy.png","components/End.jsx","redux/action/quizAction.js","components/Question.jsx","components/Start.jsx","App.js","reportWebVitals.js","redux/reducer/quizReducer.js","redux/reducer/store.js","index.js"],"names":["QUIZ_START","QUIZ_RESET","QUIZ_NEXT","QUIZ_PREV","QUIZ_SUBMIT","QUIZ_TIMEOUT","Modal","_ref","show","children","showHideClassName","_jsx","className","End","dispatch","useDispatch","answers","time","useSelector","state","quizReducer","correctAnswers","setCorrectAnswers","useState","modal","setModal","useEffect","correct","forEach","result","index","a","quizData","data","answer","_jsxs","src","Trophy","alt","srcset","length","Math","floor","onClick","style","marginLeft","handleReset","type","payload","cursor","map","i","q","Question","activeQuestion","setData","error","setError","selected","setSelected","timer","setTimer","setTimeout","radiosWrapper","useRef","undefined","console","log","changeHandler","e","target","value","question","ref","choices","choice","concat","name","onChange","checked","handlePrev","handleSubmit","_ref2","submitQuiz","ans","nextQuiz","findCheckedInput","current","querySelector","Start","minute","setMinute","second","setSecond","setTime","NaN","htmlFor","parseInt","handleQuizStart","startQuiz","App","step","showModal","setShowModal","clearInterval","interval","onAnswersCheck","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","arguments","action","reducers","persistReducer","storage","key","combineReducers","middleware","thunk","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","Provider","PersistGate","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4f103ace.chunk.js","sourcesContent":["export const QUIZ_START = \"QUIZ_START\"\nexport const QUIZ_RESET = \"QUIZ_RESET\"\nexport const QUIZ_NEXT = \"QUIZ_NEXT\"\nexport const QUIZ_PREV = 'QUIZ_PREV'\nexport const QUIZ_SUBMIT = 'QUIZ_SUBMIT'\nexport const QUIZ_TIMEOUT = 'QUIZ_TIMEOUT'","import React from \"react\";\n\nconst Modal = ({show , children}) => {\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n        {children}\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/trophy.16e6df06.png\";","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { resetQuiz } from \"../redux/action/quizAction\";\nimport { formatTime } from \"../utils\";\nimport quizData from \"../data/quiz.json\";\nimport Modal from \"./Modal\";\nimport Trophy from \"../assets/images/trophy.png\";\n\nconst End = () => {\n  const dispatch = useDispatch();\n  const { answers,time } = useSelector((state) => state.quizReducer);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    let correct = 0;\n    answers.forEach((result, index) => {\n      if (result.a === quizData?.data[index].answer) {\n        correct++;\n      }\n    });\n    setCorrectAnswers(correct);\n  }, []);\n  const handleReset = () => {\n    dispatch(resetQuiz());\n  };\n  return (\n    <div className=\"endBox\">\n      <img src={Trophy} className=\"trophy\" alt=\"\" srcset=\"\" />\n      <h3>Your results</h3>\n      <p>\n        {correctAnswers} of {quizData?.data.length}\n      </p>\n      <p>\n        <strong>\n          {Math.floor((correctAnswers / quizData?.data.length) * 100)}%\n        </strong>\n      </p>\n      <p>\n        <strong>Your time:</strong> {time}sec\n      </p>\n      <section>\n        <button className=\"button\" onClick={() => setModal(true)}>\n          Check your answers\n        </button>\n        <button\n          className=\"button\"\n          style={{ marginLeft: \"20px\" }}\n          onClick={handleReset}\n        >\n          Try again\n        </button>\n      </section>\n      <Modal show={modal}>\n        <section className=\"modalBody\">\n          <header>\n            <p className=\"\">Your Answers</p>\n            <p  style={{\n              cursor: \"pointer\"\n            }} onClick={() => setModal(false)}>X</p>\n          </header>\n          <section className=\"content\">\n            <ul>\n              {answers.map((result, i) => (\n                <li key={i} className=\"mb-6\">\n                  <p>\n                    <strong>{result.q}</strong>\n                  </p>\n                  <p\n                    className={\n                      result.a === quizData?.data[i].answer\n                        ? \"bg-success\"\n                        : \"bg-danger\"\n                    }\n                  >\n                    Your answer: {result.a}\n                  </p>\n                  {result.a !== quizData?.data[i].answer && (\n                    <p className=\"bg-warning\">\n                      Correct answer: {quizData?.data[i].answer}\n                    </p>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </section>\n        </section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default End;\n","import {\n  QUIZ_START,\n  QUIZ_NEXT,\n  QUIZ_SUBMIT,\n  QUIZ_RESET,\n  QUIZ_PREV,\n  QUIZ_TIMEOUT,\n} from \"../constant/quizConstant\";\n\nexport const startQuiz = (time) => (dispatch) => {\n  dispatch({\n    type: QUIZ_START,\n    payload: time,\n  });\n};\n\nexport const nextQuiz =\n  ({ answers }) =>\n  (dispatch) => {\n    dispatch({\n      type: QUIZ_NEXT,\n      payload: answers,\n    });\n  };\n\nexport const prevQuiz = () => (dispatch) => {\n  dispatch({\n    type: QUIZ_PREV,\n    payload: null,\n  });\n};\n\nexport const submitQuiz =\n  ({ answers, time }) =>\n  (dispatch) => {\n    dispatch({\n      type: QUIZ_SUBMIT,\n      payload: {\n        answers: answers,\n        time: time,\n      },\n    });\n  };\n\nexport const resetQuiz = () => (dispatch) => {\n  dispatch({\n    type: QUIZ_RESET,\n    payload: null,\n  });\n};\n\nexport const timeOut = () => (dispatch) => {\n  dispatch({\n    type: QUIZ_TIMEOUT,\n    payload: null,\n  });\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  nextQuiz,\n  prevQuiz,\n  submitQuiz,\n  timeOut,\n} from \"../redux/action/quizAction\";\nimport quizData from \"../data/quiz.json\";\n\nconst Question = () => {\n  const dispatch = useDispatch();\n  const { activeQuestion, answers, time } = useSelector(\n    (state) => state?.quizReducer\n  );\n  const [data, setData] = useState(quizData?.data[activeQuestion]);\n  const [error, setError] = useState(\"\");\n  const [selected, setSelected] = useState(\"\");\n  const [timer, setTimer] = useState(time);\n  useEffect(() => {\n    if (timer > 0) {\n      setTimeout(() => setTimer(timer - 1), 1000);\n    } else {\n      dispatch(timeOut());\n    }\n  }, [timer]);\n  const radiosWrapper = useRef();\n  useEffect(() => {\n    setData(quizData?.data[activeQuestion]);\n    if (answers[activeQuestion] != undefined) {\n      setSelected(answers[activeQuestion].a);\n      console.log(\"RUn once\");\n    }\n  }, [data, activeQuestion]);\n  const changeHandler = (e) => {\n    setSelected(e.target.value);\n    if (error) {\n      setError(\"\");\n    }\n  };\n  const handlePrev = () => {\n    setError(\"\");\n    dispatch(prevQuiz());\n  };\n  const handleNext = (e) => {\n    if (selected === \"\") {\n      return setError(\"Please select one option!\");\n    }\n    let ans = [...answers];\n    ans[activeQuestion] = {\n      q: data.question,\n      a: selected,\n    };\n    dispatch(\n      nextQuiz({\n        answers: ans,\n      })\n    );\n    setSelected(\"\");\n    const findCheckedInput =\n      radiosWrapper.current.querySelector(\"input:checked\");\n    if (findCheckedInput) {\n      findCheckedInput.checked = false;\n    }\n  };\n  const handleSubmit = () => {\n    if (selected === \"\") {\n      return setError(\"Please select one option!\");\n    }\n    dispatch(\n      submitQuiz({\n        answers: [\n          ...answers,\n          (answers[activeQuestion] = {\n            q: data.question,\n            a: selected,\n          }),\n        ],\n        time: time - timer,\n      })\n    );\n  };\n  return (\n    <div className=\"questionBox\">\n      <section className=\"questionHead\">\n        <h3>\n          Question {activeQuestion + 1}/{quizData?.data.length}\n        </h3>\n        <h5>{timer}</h5>\n      </section>\n      <section className=\"middleBox\">\n        <div className=\"question\">\n          <p>{data?.question}</p>\n          {error && <div>{error}</div>}\n        </div>\n        <div className=\"option\" ref={radiosWrapper}>\n          {data?.choices.map((choice, i) => (\n            <label\n              className={`${choice === selected ? `selected` : `text`}`}\n              key={i}\n            >\n              <input\n                type=\"radio\"\n                name=\"answer\"\n                value={choice}\n                onChange={changeHandler}\n                checked={choice === selected}\n              />\n              {choice}\n            </label>\n          ))}\n        </div>\n      </section>\n      <section className=\"questionBottom\">\n        {activeQuestion <= 0 ? null : (\n          <button className=\"button\" onClick={handlePrev}>\n            Prev\n          </button>\n        )}\n\n        {activeQuestion + 1 >= quizData?.data.length ? (\n          <button className=\"button nextBtn\" onClick={handleSubmit}>\n            Submit\n          </button>\n        ) : (\n          <button className=\"button nextBtn\" onClick={handleNext}>\n            Next\n          </button>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default Question;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startQuiz } from \"../redux/action/quizAction\";\nconst Start = () => {\n  const dispatch = useDispatch();\n  // const {time} = useSelector(state => state.quizReducer)\n  const [minute, setMinute] = useState(1);\n  const [second, setSecond] = useState(0);\n  const [time, setTime] = useState(60);\n  const handleQuizStart = () => {\n    dispatch(startQuiz(time));\n  };\n  useEffect(() => {\n    if (minute > 59) {\n      setMinute(1);\n    }\n    if (second > 59) {\n      setSecond(1);\n    }\n  }, [minute, second]);\n  useEffect(() => {\n    console.log(minute);\n    console.log(typeof minute);\n    if (minute !== NaN && second !== NaN) {\n      setTime(minute * 60 + second);\n    }\n  }, [minute, second]);\n  return (\n    <div className=\"startBox\">\n      <div>\n        <div>\n          <h1>Start the Quiz</h1>\n          <p>Good luck!</p>\n          <p>Time:&nbsp;&nbsp;{time}sec</p>\n          <section>\n            <label htmlFor=\"\">\n              <input\n                type=\"number\"\n                className=\"timeInput\"\n                value={minute}\n                onChange={(e) => setMinute(parseInt(e.target.value))}\n              />\n              min\n            </label>\n            <label htmlFor=\"\">\n              <input\n                type=\"number\"\n                className=\"timeInput\"\n                value={second}\n                onChange={(e) => setSecond(parseInt(e.target.value))}\n              />\n              sec\n            </label>\n          </section>\n          <button className=\"startButton\" onClick={handleQuizStart}>\n            START\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Start;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport End from \"./components/End\";\nimport Question from \"./components/Question\";\nimport Start from \"./components/Start\";\nimport quizData from \"./data/quiz.json\";\n\nlet interval;\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { step, answers } = useSelector((state) => state?.quizReducer);\n  console.log(step);\n  console.log(answers);\n  const [showModal, setShowModal] = useState(false);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    if (step === 3) {\n      clearInterval(interval);\n    }\n  }, [step]);\n\n  return (\n    <div className=\"App\">\n      {step === 1 && <Start />}\n      {step === 2 && <Question />}\n      {step === 3 && (\n        <End\n          data={quizData.data}\n          time={time}\n          onAnswersCheck={() => setShowModal(true)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {QUIZ_START , QUIZ_RESET , QUIZ_NEXT,QUIZ_SUBMIT, QUIZ_PREV , QUIZ_TIMEOUT} from '../constant/quizConstant'\n\nconst initialState = {\n    step : 1,\n    activeQuestion: 0,\n    answers: [],\n    time: 60\n}\n\nconst quizReducer = (state = initialState , action) =>{\n    const {type , payload} = action\n    switch (type) {\n        case QUIZ_START:\n            return {\n                ...state,step:2 , time: payload\n            }\n        case QUIZ_NEXT:\n            return{\n                ...state,answers: [...payload],activeQuestion: state?.activeQuestion+1\n            }\n        case QUIZ_SUBMIT:\n            return{\n                ...state,step:3,answers:[...payload?.answers] , time: payload?.time\n            }\n        case QUIZ_RESET:\n            return{\n                ...state,step:1,activeQuestion:0,answers:[], time: 60\n            }\n        case QUIZ_PREV:\n            return{\n                ...state,activeQuestion:state?.activeQuestion-1\n            }\n        case QUIZ_TIMEOUT:\n            return{\n                ...state, time: 0,step:3\n            }\n        default:\n            return state;\n    }\n}\n\nexport default quizReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\n\nimport quizReducer from \"./quizReducer\";\n\nconst reducers = persistReducer(\n  { storage: storage, key: \"a27\" },\n  combineReducers({\n    quizReducer,\n  })\n);\n\nlet middleware = [];\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, thunk, logger];\n} else {\n  middleware = [...middleware, thunk];\n}\n\nexport const store = createStore(reducers, {}, applyMiddleware(...middleware));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// redux provider\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/reducer/store\";\n// redux persist\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}